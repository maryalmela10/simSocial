{% extends 'base.html.twig' %}
{% block header %}
{% endblock %}
{% block title %}Crear contraseña{% endblock %}
{% block stylesheets %}
<style>
.container {
        max-width: 600px;
        width: 90%;
        margin: 40px auto 0 auto;
        padding: 20px;
        background-color: rgba(255, 255, 255, 0.918);
        border-radius: 10px;
        box-shadow: 0 4px 6px #dea1ff;
        box-sizing: border-box;
    }

    h1 {
        color: #ffac4c;
        font-size: 28px;
        margin-bottom: 20px;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        display: block;
        margin-bottom: 5px;
        color: #777;
        font-size: 16px;
    }

    .form-control {
        width: 100%;
        padding: 12px;
        border: 2px solid #1a3a63;
        border-radius: 8px;
        font-size: 16px;
        transition: all 0.3s ease;
        box-sizing: border-box;
    }

    .form-control:focus {
        outline: none;
        border-color: #99e7ff;
        box-shadow: 0 0 10px rgba(153, 231, 255, 0.5);
    }

    .btn-primary {
        display: inline-block;
        color: black;
        text-decoration: none;
        transition: all 0.3s ease;
        border-radius: 5px;
        padding: 8px 15px;
        background: linear-gradient(90deg, #99e7ff 0%, #dea1ff 100%);
        border: none;
        font-size: 1em;
        font-weight: bold;
        cursor: pointer;
        text-align: center;
    }

    .btn-primary:hover {
        background: linear-gradient(90deg, #dea1ff 0%, #99e7ff 100%);
        color: white;
        transform: scale(1.05);
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    .error-message {
        color: #721c24;
        font-size: 14px;
        margin-top: 5px;
    }

    @media (max-width: 600px) {
        .container {
            padding: 10px;
        }
    }
</style>
{% endblock %}

{% block contenido %}
<div class="container">
    <h1>Restablecer Contraseña</h1>
    <form id="restablecerContrasenaForm" method="post">
        <div class="form-group">
            <label for="nueva_contrasena">Nueva Contraseña:</label>
            <input type="password" id="nueva_contrasena" name="nueva_contrasena" required class="form-control">
        </div>
        <div class="form-group">
            <label for="confirmar_contrasena">Confirmar Nueva Contraseña:</label>
            <input type="password" id="confirmar_contrasena" name="confirmar_contrasena" required class="form-control">
        </div>
        <button type="submit" class="btn btn-primary">Restablecer Contraseña</button>
    </form>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('restablecerContrasenaForm');
    const campos = ['nueva_contrasena', 'confirmar_contrasena'];

    function mostrarError(campo, mensaje) {
        const formulario = campo.parentElement;
        let elementoError = formulario.querySelector('.error-message');
        
        if (!elementoError) {
            elementoError = document.createElement('div');
            elementoError.className = 'error-message';
            formulario.appendChild(elementoError);
        }
        
        elementoError.textContent = mensaje;
    }

    function limpiarError(campo) {
        const formulario = campo.parentElement;
        const elementoError = formulario.querySelector('.error-message');
        if (elementoError) {
            elementoError.remove();
        }
    }

    function validarCampo(campo) {
        if (campo.required && campo.value.trim() === '') {
            mostrarError(campo, 'Este campo es obligatorio');
            return false;
        }

        if (campo.id === 'nueva_contrasena') {
            const passwordRegex = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;
            if (!passwordRegex.test(campo.value)) {
                mostrarError(campo, 'La contraseña debe tener al menos 8 caracteres, una mayúscula, una minúscula y un número');
                return false;
            }
        }

        if (campo.id === 'confirmar_contrasena') {
            const nuevaContrasena = document.getElementById('nueva_contrasena');
            if (campo.value !== nuevaContrasena.value) {
                mostrarError(campo, 'Las contraseñas no coinciden');
                return false;
            }
        }

        limpiarError(campo);
        return true;
    }

    campos.forEach(campoId => {
        const campo = document.getElementById(campoId);
        campo.addEventListener('blur', () => validarCampo(campo));
    });

    form.addEventListener('submit', function(event) {
        let formValido = true;
        campos.forEach(campoId => {
            const campo = document.getElementById(campoId);
            if (!validarCampo(campo)) {
                formValido = false;
            }
        });

        if (!formValido) {
            event.preventDefault();
        }
    });
});
</script>
{% endblock %}
